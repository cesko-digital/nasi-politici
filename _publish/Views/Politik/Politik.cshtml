@model HlidacStatu.NasiPolitici.ViewModels.PolitikViewModel
@using HlidacStatu.NasiPolitici.ViewComponents;
@using static HlidacStatu.Util.Extensions;
@{
    ViewData["Title"] = "Informace o politikovi";

    var highDescription =
        HlidacStatu.Util.InfoFact.RenderInfoFacts(
            Model.Osoba.GetInfoFacts().Where(i => i.Level != HlidacStatu.Util.InfoFact.ImportanceLevel.Stat).ToArray()
                , 4, true, true, "", "<p>{0}</p>");

    var statDescription =
        HlidacStatu.Util.InfoFact.RenderInfoFacts(
            Model.Osoba.GetInfoFacts().Where(i => i.Level == HlidacStatu.Util.InfoFact.ImportanceLevel.Stat).ToArray()
                , 4, true, true, "", "<p>{0}</p>");
}

@section Scripts{
    <script>
        var _showFAD = true;
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-154075-22', 'auto');
        ga('send', 'pageview');

        $(function () {

            $(".low-box").each(function () {
                var t = $(this);
                var more = t.find(".low-box-line:first");
                var actheight = t.outerHeight();
                var cssheight = parseInt(t.css("max-height"), 10);
                if (actheight < cssheight) {
                    more.hide();
                }
            });
            $(".low-box .low-box-line .more").click(function () {
                var totalHeight = 0;
                $el = $(this); $p = $el.parent(); $up = $p.parent();
                $ps = $up.find(".low-box-content:first");
                // measure how tall inside should be by adding together heights of all inside paragraphs (except read-more paragraph)
                $ps.each(function () {
                    totalHeight += $(this).outerHeight();
                    // FAIL totalHeight += $(this).css("margin-bottom");
                });
                $up.css({
                    // Set height to prevent instant jumpdown when max height is removed
                    "height": $up.height(),
                    "max-height": 9999
                })
                    .animate({
                        height: totalHeight,
                        top: "+=60"
                    });

                // fade out read-more
                $p.fadeOut(function () {
                    $ps.css({ "top": 0 });
                });
                // prevent jump-down
                return false;
            });
        });
    </script>


}

<div class="row">
    <div class="card sm-12">
        <div class="row no-gutters">
            <div class="col-md-4">
                <img src="@Model.Osoba.GetPhotoUrl()" class="card-img" alt="@Model.Osoba.GetFullName()">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@Model.Osoba.GetFullNameWithYear()</h5>
                    <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
                </div>
            </div>
        </div>
    </div>
</div>

<h3>Základní informace</h3>
<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Ve zkratce</h5>
                <p class="card-text">
                    @await Component.InvokeAsync(nameof(LowBoxVC), new { width = 180, content = highDescription })
                </p>
                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Role</h5>
                <p class="card-text">
                    @await Component.InvokeAsync(nameof(LowBoxVC), new { width = 180, content = Model.Osoba._FunkceOsoba })
                </p>
                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Demagog</h5>
                <p class="card-text">
                    <br />
                    Demagog
                    <br />
                </p>
                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>
    </div>
</div>
<div class="row justify-content-center">
    <div class="col-xs-12 col-sm-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Odkazy</h5>
                <p class="card-text">
                    <ul>
                        <li><a href="$">Odkaz 1 </a></li>
                        <li><a href="$">Odkaz 2 </a></li>
                        <li><a href="$">Odkaz 3 </a></li>
                    </ul>
                </p>
            </div>
        </div>

    </div>
</div>

<div class="row">
    <div class="col-xs-12 col-sm-4">

        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Majetková propojení</h5>
                <p class="card-text">
                    @await Component.InvokeAsync(nameof(LowBoxVC), new { width = 180, content = statDescription })
                </p>
                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>

    </div>

    <div class="col-xs-12 col-sm-4">

        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Sponzorství</h5>
                <p class="card-text">
                    @await Component.InvokeAsync(nameof(LowBoxVC), new { width = 180, content = Model.Osoba._Sponzoring })
                </p>
                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>

    </div>

    <div class="col-xs-12 col-sm-4">

        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Insolvence</h5>
                <p class="card-text">
                    @if (Model.Osoba._InsolvenceOsoba.Count == 0)
                    {
                        <span>@Model.Osoba.GetFullName() se osobně nevyskytuje v insolvenčním rejstříku.</span>
                    }
                    else
                    {
                        foreach (var kv in Model.Osoba._InsolvenceOsoba.Where(m => m.Value > 0).OrderByDescending(m => m.Value))
                        {
                            <span>
                                @Model.Osoba.GetFullName() osobně @Html.Raw(HlidacStatu.Util.Extensions.GetCzechPlural(kv.Value, "není v insolvečním rejstříku;se vyskytuje v <b>jedné insolvenci</b>;se vyskytuje v <b>{0} insolvencích</b>;se vyskytuje v <b>{0} insolvencích</b>")) jako @kv.Key.
                                @if (kv.Value > 0)
                                {
                                    <a class="btn btn-default btn-xs" href="@($"https://www.hlidacstatu.cz/insolvence/hledat?q={kv.Key.RemoveDiacritics()}.osobaId:{Model.Osoba.NameId}")">
                                        <span class="glyphicon glyphicon-search dark" aria-hidden="true"></span>
                                        Vyhledat je.
                                    </a>
                                }
                            </span>
                        }
                    }
                </p>
                <p class="card-text">
                    @if (Model.Osoba._InsolvenceFirma.Count == 0)
                    {
                        <span>Firmy navázané na @Model.Osoba.GetFullName() se nevyskytují v insolvenčním rejstříku.</span>
                    }
                    else
                    {
                        foreach (var kv in Model.Osoba._InsolvenceFirma.Where(m => m.Value > 0).OrderByDescending(m => m.Value))
                        {
                            <span>
                                Firmy navázané na @Model.Osoba.GetFullName() @Html.Raw(HlidacStatu.Util.Extensions.GetCzechPlural(kv.Value, "není v insolvečním rejstříku;se vyskytuje v <b>jedné insolvenci</b>;se vyskytuje v <b>{0} insolvencích</b>;se vyskytuje v <b>{0} insolvencích</b>")) jako @kv.Key.
                                @if (kv.Value > 0)
                                {
                                    <a class="btn btn-default btn-xs" href="@($"https://www.hlidacstatu.cz/insolvence/hledat?q={kv.Key.RemoveDiacritics()}.osobaId:{Model.Osoba.NameId}")">
                                        <span class="glyphicon glyphicon-search dark" aria-hidden="true"></span>
                                        Vyhledat je.
                                    </a>
                                }
                            </span>
                        }
                    }
                </p>
                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>

    </div>


</div>

<div class="row">
    <div class="col-xs-12 col-sm-4">

        <div class="card">
            <div class="card-body">
                <h5 class="card-title text-muted">Centrální registr oznámení (TBD)</h5>
                <p class="card-text">

                </p>
                @if (Model.Osoba._Oznameni.Count == 0)
                {
                    <span>Nevyskytuje se v Centrálním registru oznámení(TBD)</span>
                }
                else
                {
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Osoba</th>
                                <th>Organizace</th>
                                <th>Funkce</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var oznameni in Model.Osoba._Oznameni)
                            {
                                <tr>
                                    <td>
                                        <a href="@($"https://www.hlidacstatu.cz/data/Detail/centralniregistroznameni/{oznameni.Id}?qs=(OsobaId:{Model.Osoba.NameId}) OR (\"{Model.Osoba.Jmeno} {Model.Osoba.Prijmeni}\")")" >
                                    Detail
                                        </a>
                                    </td>
                                    <td>@Html.Raw(oznameni.Osoba)</td>
                                    <td>@oznameni.Organizace</td>
                                    <td>@oznameni.Funkce</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                <div class="text-center">
                    <a class="btn btn-default btn-default-new" href="@($"https://www.hlidacstatu.cz/data/Detail/centralniregistroznameni?q=(OsobaId:{Model.Osoba.NameId}) OR (\"{Model.Osoba.Jmeno} {Model.Osoba.Prijmeni}\")")" >zobrazit všechny nalezené záznamy</a>
                </div>


                <a href="#" class="card-link">Další podrobnosti</a>
            </div>
        </div>

    </div>
</div>